// ========================================
// SCSS 模块导入 - 使用现代 @use 语法
// ========================================
@use 'sass:map';    // 映射操作
@use 'sass:color';  // 颜色处理
@use 'sass:list';   // 列表操作

// ========================================
// 设计系统 - 颜色、字体、间距规范
// ========================================

/* === 主题色彩系统 === */
$primary: #2080f0;   // 主色调 - 蓝色
$success: #18a058;   // 成功色 - 绿色
$warning: #f0a020;   // 警告色 - 橙色
$danger: #d03050;    // 危险色 - 红色
$info: #0ea5e9;      // 信息色 - 青色

/* === 渐变色系统 === */
$gradient-primary: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
$gradient-success: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
$gradient-warning: linear-gradient(135deg, #ffa726 0%, #fb8c00 100%);
$gradient-danger: linear-gradient(135deg, #ff6b6b 0%, #ee5a52 100%);
$gradient-info: linear-gradient(135deg, #74b9ff 0%, #0984e3 100%);

/* === 间距系统 - 统一的空间规范 === */
$space: (
  xs: 4px,    // 最小间距
  sm: 8px,    // 小间距
  md: 12px,   // 中等间距
  lg: 16px,   // 大间距
  xl: 20px,   // 超大间距
  2xl: 24px   // 最大间距
);

/* === 字体系统 - 标准化字体大小 === */
$font: (
  xs: 10px,   // 最小字体
  sm: 11px,   // 小字体
  base: 12px, // 基础字体
  md: 13px,   // 中等字体
  lg: 14px,   // 大字体
  xl: 16px,   // 超大字体
  2xl: 18px,  // 标题字体
  3xl: 20px   // 大标题字体
);

/* === 圆角系统 === */
$radius: (
  sm: 3px,    // 小圆角
  base: 4px,  // 基础圆角
  md: 6px,    // 中等圆角
  lg: 8px,    // 大圆角
  xl: 10px,   // 超大圆角
  full: 50%   // 完全圆角
);

/* === 阴影和边框系统 === */
$shadow: 0 1px 4px rgba(0, 0, 0, 0.04);                    // 基础阴影
$shadow-hover: 0 4px 16px rgba(0, 0, 0, 0.08);            // 悬停阴影
$border: rgba(229, 231, 235, 0.8);                         // 边框颜色
$transition: 0.2s ease;                                     // 统一过渡效果

// ========================================
// 核心混合宏 - 复用的样式模式
// ========================================

/* === 弹性布局居中 === */
@mixin flex-center($gap: 0) {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: $gap;
}

/* === 弹性布局两端对齐 === */
@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

/* === 卡片悬停效果 === */
@mixin card-hover {
  transition: all $transition;
  &:hover {
    transform: translateY(-2px);
    box-shadow: $shadow-hover;
  }
}

/* === 渐变文字效果 === */
@mixin gradient-text($gradient) {
  background: $gradient;
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  
  // 兼容性降级
  @supports not (-webkit-background-clip: text) {
    color: $primary;
  }
}

/* === 按钮基础样式 === */
@mixin button-base($bg) {
  padding: map.get($space, sm);
  border: none;
  border-radius: map.get($radius, sm);
  font-weight: 600;
  font-size: map.get($font, xs);
  cursor: pointer;
  transition: all $transition;
  background: $bg;

  &:hover:not(:disabled) {
    transform: translateY(-1px);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none;
  }
}

// ========================================
// 主容器 - 表单演示页面的根容器
// ========================================
.form-demo {
  padding: map.get($space, xl);
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
  box-sizing: border-box;  
  // 防止页面宽度抖动 - 固定最小宽度和稳定布局
  min-width: 100%;
  width: 100%;
  overflow-x: hidden;

  /* === 统一标题样式继承 === */
  h1, h2, h3, h4, h5, h6,
  .panel-title, .card-title, .form-header h3,
  .validation-title, .stats-title {
    color: inherit !important;
  }

  /* === NaiveUI 卡片组件重写 === */
  :deep(.n-card) {
    border: 1px solid $border !important;
    border-radius: map.get($radius, md) !important;
    box-shadow: none !important;

  }

  // 保护评分组件的原生样式 - 避免被覆盖
  :deep(.n-rate) {
    * {
      color: inherit !important;
    }
    
    // 确保评分组件的星星颜色不被覆盖
    .n-rate__item {
      color: inherit !important;
      
      &--active {
        color: var(--n-item-color-active) !important;
      }
    }
  }
  
  // 保护其他表单组件的原生样式
  :deep(.n-input),
  :deep(.n-select),
  :deep(.n-checkbox),
  :deep(.n-radio),
  :deep(.n-switch),
  :deep(.n-slider),
  :deep(.n-input-number) {
    // 让这些组件保持原生主题色
    color: inherit;
  }
}

// ========================================
// 控制面板区域 - 页面顶部的配置控制区
// ========================================
.control-panel {
  margin-bottom: map.get($space, xl);
  
  // 防止内容变化导致的布局抖动
  min-height: fit-content;
  width: 100%;

  /* === 面板标题样式 === */
  .panel-title {
    font-size: map.get($font, 2xl);
    font-weight: 700;
    margin-bottom: map.get($space, lg);
    position: relative;

    // 标题下方装饰线
    &::after {
      content: '';
      position: absolute;
      bottom: -6px;
      left: 50%;
      transform: translateX(-50%);
      width: 40px;
      height: 2px;
      background: $gradient-primary;
      border-radius: map.get($radius, full);
    }

    .subtitle {
      font-size: map.get($font, md);
      font-weight: 400;
      margin-top: map.get($space, xs);
      opacity: 0.8;
    }
  }

  /* === 响应式控制卡片网格 === */
  .control-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: map.get($space, md);
    margin-bottom: map.get($space, lg);
    width: 100%;
    
    // 防止网格项目影响整体布局
    > * {
      min-width: 0;
      width: 100%;
      box-sizing: border-box;
    }
  }

  /* === 布局特定配置区域 === */
  .layout-specific-config {
    margin-top: map.get($space, xl);
    width: 100%;

    :deep(.control-card.full-width) {
      grid-column: 1 / -1;
      width: 100%;

      .card-title {
        color: $primary;
        font-size: map.get($font, lg);
        margin-bottom: map.get($space, lg);

        &::before {
          content: '⚙️';
          margin-right: map.get($space, sm);
          background: none !important;
          width: auto !important;
          height: auto !important;
          border-radius: 0 !important;
        }
      }

      .layout-config-content {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: map.get($space, lg);
        width: 100%;
      }
    }
  }

  /* === 带徽章的输入框组合 === */
  .input-with-badge {
    display: flex;
    align-items: center;
    gap: map.get($space, sm);
    padding: map.get($space, xs) map.get($space, sm);
    border-radius: map.get($radius, md);
    border: 1px solid $border;
    width: 100%;
    box-sizing: border-box;

    .number-input {
      flex: 1;
      border: none;
      background: transparent;
      padding: map.get($space, xs);
      font-size: map.get($font, base);
      font-weight: 500;
      min-width: 0;

      &:focus { outline: none; }
    }

    .badge {
      padding: map.get($space, xs) map.get($space, sm);
      border-radius: map.get($radius, sm);
      font-size: map.get($font, xs);
      font-weight: 600;
      flex-shrink: 0;

      &.primary { 
        background: $gradient-primary;
        color: white;
      }
    }
  }
}

// ========================================
// 控制卡片 - 控制面板中的各个功能卡片
// ========================================
:deep(.control-card) {
  width: 100%;
  min-width: 0;
  box-sizing: border-box;
  
  /* === 卡片容器基础样式 === */
  .n-card {
    padding: map.get($space, lg) !important;
    position: relative;
    overflow: hidden;
    @include card-hover;
    display: flex !important;
    flex-direction: column !important;
    min-height: 220px !important;
    max-height: 300px !important;
    box-shadow: $shadow !important;
    width: 100% !important;
    box-sizing: border-box !important;
    justify-content: flex-start !important; // 内容从顶部开始，更好的垂直分布

    // 顶部装饰条 - 悬停时显示
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 3px;
      background: $gradient-primary;
      opacity: 0;
      transition: opacity $transition;
    }

    &:hover::before { 
      opacity: 1; 
    }
    
    // 防止内容溢出
    > * {
      width: 100%;
      box-sizing: border-box;
    }
  }

  /* === 卡片标题 - 带图标的居中标题 === */
  .card-title {
    font-size: map.get($font, md) !important;
    font-weight: 600 !important;
    margin-bottom: map.get($space, md) !important; // 减少底部间距，让内容更紧凑
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    gap: map.get($space, sm) !important;
    text-align: center !important;
    white-space: nowrap !important;
    overflow: hidden !important;
    text-overflow: ellipsis !important;
    padding: map.get($space, xs) 0 !important; // 添加上下内边距，让标题更居中
    flex-shrink: 0 !important; // 防止标题被压缩

    // 图标装饰（通过伪元素实现）
    &::before {
      width: 14px;
      height: 14px;
      border-radius: map.get($radius, sm);
      background: transparent !important; // 确保图标背景透明
      flex-shrink: 0;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 14px; // 确保emoji图标大小一致
    }
  }

  /* === 配置区域容器 === */
  .config-section {
    flex: 1;
    display: flex;
    flex-direction: column;
    width: 100%;
    
    &:not(:last-child) {
      margin-bottom: map.get($space, sm);
    }
  }

  /* === 配置区域标签 === */
  .section-label {
    font-size: map.get($font, xs);
    font-weight: 600;
    margin: 0 0 map.get($space, xs) 0; // 减少间距
    opacity: 0.7;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    padding: 0 map.get($space, sm);
  }

  /* === 布局选择按钮组 === */
  .layout-buttons {
    display: grid !important;
    grid-template-columns: repeat(2, 1fr) !important;
    gap: map.get($space, sm) !important;
    flex: 1 !important; // 占据剩余空间
    align-content: center !important; // 垂直居中对齐
    padding: map.get($space, sm) !important;
    width: 100% !important;

    .layout-btn {
      padding: map.get($space, md) map.get($space, sm) !important;
      border: 2px solid transparent;
      border-radius: map.get($radius, md);
      font-size: map.get($font, xs);
      font-weight: 500;
      cursor: pointer;
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      min-height: 45px !important;
      @include flex-center;
      background: transparent;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      width: 100%;
      box-sizing: border-box;
      color: inherit; // 继承主题色而不是硬编码

      &:hover, &.active {
        background: $gradient-primary;
        color: white !important;
        transform: translateY(-1px);
        box-shadow: 0 2px 8px rgba(102, 126, 234, 0.3);
      }

      &.active { 
        box-shadow: 0 2px 12px rgba(102, 126, 234, 0.4);
        font-weight: 600;
      }
    }
  }

  /* === 通用配置项 - 左右对齐的配置行 === */
  .config-item {
    @include flex-between;
    padding: map.get($space, sm) map.get($space, md) !important; // 调整内边距，让配置项更紧凑
    border-radius: map.get($radius, sm);
    border: 1px solid transparent;
    transition: all $transition;
    min-height: 36px; // 减少最小高度
    align-items: center;
    width: 100%;
    box-sizing: border-box;
    margin-bottom: map.get($space, xs); // 添加底部间距
    
    &:last-child {
      margin-bottom: 0; // 最后一个配置项不需要底部间距
    }
    
    &:hover { 
      border-color: $border;
      background: rgba(0, 0, 0, 0.02);
    }

    span {
      font-size: map.get($font, sm);
      font-weight: 500;
      
      &:first-child {
        flex: 1;
        text-align: left;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        min-width: 0;
      }
    }

    // 右侧控件对齐
    .switch, 
    .range-group,
    .button-group {
      flex-shrink: 0;
      margin-left: map.get($space, sm);
    }

    // 下拉选择框样式
    select {
      padding: map.get($space, xs) map.get($space, sm);
      border: 1px solid $border;
      border-radius: map.get($radius, sm);
      background: transparent;
      font-size: map.get($font, sm);
      color: inherit; // 继承主题色
      cursor: pointer;

      &:focus {
        outline: none;
        border-color: $primary;
      }
    }
  }

  /* === 统计数字显示区域 === */
  .stat-display {
    flex: 1;
    @include flex-center;
    flex-direction: column;
    text-align: center;
    padding: map.get($space, md) map.get($space, lg); // 调整内边距，上下减少一些
    justify-content: center;
    min-height: 120px;
    width: 100%;

    .stat-number {
      font-size: 28px;
      font-weight: 800;
      @include gradient-text($gradient-primary);
      margin-bottom: map.get($space, sm);
      line-height: 1;
      display: block;
      width: 100%;
    }

    .stat-label {
      font-size: map.get($font, sm);
      font-weight: 500;
      line-height: 1.3;
      max-width: 100%;
      text-align: center;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
  }

  /* === 按钮组合 - 平分宽度的按钮布局 === */
  .button-group {
    display: flex;
    gap: map.get($space, xs);
    padding: map.get($space, sm);
    border-radius: map.get($radius, md);
    justify-content: center;
    align-items: stretch;
    width: 100%;
    box-sizing: border-box;

    button {
      margin-top: 0;
      flex: 1;
      min-width: 0;
      padding: map.get($space, sm) map.get($space, xs);
      border: 1px solid transparent;
      border-radius: map.get($radius, sm);
      font-weight: 500;
      cursor: pointer;
      transition: all $transition;
      font-size: map.get($font, xs);
      background: transparent;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      display: flex;
      align-items: center;
      justify-content: center;
      height: 32px;
      color: inherit; // 继承主题色而不是硬编码

      &.active {
        color: $primary;
        background: rgba(32, 128, 240, 0.1);
        border-color: rgba(32, 128, 240, 0.2);
        font-weight: 600;
      }

      &:hover:not(.active) {
        background: rgba(32, 128, 240, 0.05); // 使用主题色的淡化版本
        border-color: rgba(32, 128, 240, 0.1);
      }
    }
  }

  /* === 操作按钮组 - 网格布局的彩色按钮 === */
  .action-buttons {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: map.get($space, xs);
    margin-top: 10px;
    width: 100%;

    button {
      @include button-base(transparent);
      color: white !important;
      
      // 按钮主题色
      &.fill { 
        background: $gradient-success;
        
        &:hover:not(:disabled) {
          background: color.scale($success, $lightness: -10%);
        }
      }
      
      &.preview { 
        background: $gradient-info;
        
        &:hover:not(:disabled) {
          background: color.scale($info, $lightness: -10%);
        }
      }
      
      &.clear { 
        background: $gradient-warning;
        
        &:hover:not(:disabled) {
          background: color.scale($warning, $lightness: -10%);
        }
      }
      
      &.validate { 
        background: $gradient-primary;
        
        &:hover:not(:disabled) {
          background: color.scale($primary, $lightness: -10%);
        }
      }
    }
  }

  /* === 字段操作按钮组 - 文字按钮样式 === */
  .field-actions {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: map.get($space, xs);
    margin-top: 10px;
    width: 100%;

    button {
      padding: map.get($space, sm);
      border: 1px solid $border;
      border-radius: map.get($radius, sm);
      font-weight: 500;
      font-size: map.get($font, xs);
      cursor: pointer;
      transition: all $transition;
      background: transparent;
      color: inherit; // 继承主题文字颜色，不设置白色

      &:hover:not(:disabled) {
        border-color: $primary;
        color: $primary;
        transform: translateY(-1px);
      }

      &:disabled {
        opacity: 0.5;
        cursor: not-allowed;
        transform: none;
      }
    }
  }

  /* === 开关组件 - 自定义开关样式 === */
  .switch {
    width: 40px;
    height: 20px;
    background: #e0e0e0;
    border-radius: 16px;
    position: relative;
    cursor: pointer;
    transition: all $transition;
    flex-shrink: 0;

    &.active { 
      background: $primary; 
    }

    // 开关滑块
    &::after {
      content: '';
      width: 16px;
      height: 16px;
      background: white;
      border-radius: map.get($radius, full);
      position: absolute;
      top: 2px;
      left: 2px;
      transition: all $transition;
      box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
    }

    &.active::after { 
      transform: translateX(20px); 
    }
  }

  /* === 范围滑块组件 === */
  .range-group {
    display: flex;
    align-items: center;
    gap: map.get($space, sm);
    min-width: 120px;

    input[type='range'] {
      flex: 1;
      height: 4px;
      background: #e0e0e0;
      border-radius: map.get($radius, full);
      outline: none;
      min-width: 80px;

      // WebKit 滑块样式
      &::-webkit-slider-thumb {
        width: 14px;
        height: 14px;
        background: $primary;
        border-radius: map.get($radius, full);
        cursor: pointer;
        border: none;
        box-shadow: 0 1px 3px rgba(32, 128, 240, 0.3);
        -webkit-appearance: none;
      }
    }

    span {
      font-size: map.get($font, xs);
      font-weight: 600;
      min-width: 30px;
      text-align: center;
      flex-shrink: 0;
    }
  }

  /* === 数值显示徽章 === */
  .field-count, .required-count {
    font-weight: 700;
    font-size: map.get($font, lg);
    padding: map.get($space, sm) map.get($space, md);
    border-radius: map.get($radius, md);
    border: 2px solid;
    margin: map.get($space, sm) 0;
    display: inline-block;
    min-width: 40px;
    text-align: center;
    flex-shrink: 0;
  }

  .field-count {
    color: $primary;
    border-color: $primary;
  }

  .required-count {
    color: $danger;
    border-color: $danger;
  }

  /* === 状态徽章和数值显示 === */
  .status-badge {
    padding: map.get($space, xs) map.get($space, md);
    border-radius: 16px;
    font-weight: 600;
    font-size: map.get($font, sm);
    flex-shrink: 0;

    &.success {
      background: $success;
      color: #ffffff !important;
    }
    
    &.error {
      background: $danger;
      color: #ffffff !important;
    }
  }

  .perf-value {
    font-weight: 600;
    font-size: map.get($font, md);
    padding: map.get($space, xs) map.get($space, sm);
    border-radius: map.get($radius, sm);
    flex-shrink: 0;

    &.success {
      color: $success;
      background: rgba(24, 160, 88, 0.1);
    }
  }
}

// ========================================
// 卡片个性化图标 - 为不同卡片添加表情符号
// ========================================
:deep(.control-card) {
  // 使用 nth-child 为每个卡片指定独特图标
  &:nth-child(1) .card-title::before { content: '🎨'; background: none !important; }
  &:nth-child(2) .card-title::before { content: '⚙️'; background: none !important; }
  &:nth-child(3) .card-title::before { content: '📐'; background: none !important; }
  &:nth-child(4) .card-title::before { content: '📊'; background: none !important; }
  &:nth-child(5) .card-title::before { content: '📏'; background: none !important; }
  &:nth-child(6) .card-title::before { content: '🔧'; background: none !important; }
  &:nth-child(7) .card-title::before { content: '✅'; background: none !important; }
  &:nth-child(8) .card-title::before { content: '⚡'; background: none !important; }
}

// ========================================
// 表单区域 - 主要的表单展示区域
// ========================================
:deep(.form-section) {
  margin-bottom: map.get($space, xl);
  width: 100%;

  .n-card { 
    padding: map.get($space, xl);
    width: 100%;
    box-sizing: border-box;
  }

  /* === 表单头部 === */
  .form-header {
    @include flex-between;
    margin-bottom: map.get($space, lg);
    padding-bottom: map.get($space, md);
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);
    width: 100%;

    h3 {
      margin: 0;
      font-size: map.get($font, xl);
      font-weight: 600;
      flex: 1;
      min-width: 0;
    }

    .field-badge {
      padding: map.get($space, xs) map.get($space, sm);
      border-radius: map.get($radius, xl);
      font-size: map.get($font, sm);
      font-weight: 500;
      background: $primary;
      color: white !important;
      flex-shrink: 0;
    }
  }

  /* === 布局信息提示 === */
  .layout-info {
    background: rgba(14, 165, 233, 0.1);
    border: 1px solid $info;
    border-radius: map.get($radius, sm);
    padding: map.get($space, md);
    margin-bottom: map.get($space, lg);
    font-size: map.get($font, md);
    width: 100%;
    box-sizing: border-box;
  }

  /* === 表单操作按钮 === */
  .form-actions {
    @include flex-center(map.get($space, md));
    margin-top: map.get($space, xl);
    width: 100%;
    justify-content: center;

    .submit-btn, .reset-btn {
      padding: map.get($space, md) map.get($space, xl);
      border: none;
      border-radius: map.get($radius, base);
      font-size: map.get($font, md);
      cursor: pointer;
      transition: all $transition;
      color: white !important;

      &:hover:not(:disabled) { 
        transform: translateY(-1px); 
      }
      
      &:disabled {
        opacity: 0.6;
        cursor: not-allowed;
      }
    }

    .submit-btn {
      @include flex-center(map.get($space, sm));
      background: $success;

      &:hover:not(:disabled) { 
        background: color.scale($success, $lightness: -10%); 
      }

      // 加载动画
      .loading {
        width: 12px;
        height: 12px;
        border: 2px solid rgba(255, 255, 255, 0.3);
        border-top: 2px solid currentColor;
        border-radius: map.get($radius, full);
        animation: spin 1s linear infinite;
      }
    }

    .reset-btn {
      background: #999;
      
      &:hover { 
        background: color.scale(#999, $lightness: -10%); 
      }
    }
  }
}

/* === 旋转动画 === */
@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

// ========================================
// 状态监控区域 - 页面底部的数据统计区
// ========================================
.status-section {
  margin-top: map.get($space, 2xl);
  width: 100%;

  /* === 状态卡片网格 === */
  .status-cards {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: map.get($space, md);
    margin-top: map.get($space, lg);
    width: 100%;
  }

  /* === 详细统计布局 === */
  .status-details {
    display: grid;
    grid-template-columns: 2fr 1fr;
    gap: map.get($space, xl);
    margin-top: map.get($space, xl);
    width: 100%;
  }
}

/* === 状态卡片样式 === */
:deep(.status-card) {
  text-align: center;
  width: 100%;

  .n-card {
    padding: map.get($space, lg);
    @include card-hover;
    width: 100%;
    box-sizing: border-box;
  }

  .number {
    font-size: 24px;
    font-weight: bold;
    margin-bottom: map.get($space, xs);
  }

  .label { 
    font-size: map.get($font, md); 
  }

  // 不同状态的渐变色
  &.completed .number { @include gradient-text($gradient-primary); }
  &.pending .number { @include gradient-text($gradient-warning); }
  &.completion .number { @include gradient-text($gradient-info); }
  &.errors .number { @include gradient-text($gradient-success); }
}

/* === 验证详情和快速统计 === */
:deep(.validation-detail), :deep(.quick-stats) {
  .n-card { 
    padding: map.get($space, xl);
    width: 100%;
    box-sizing: border-box;
  }
}

:deep(.validation-detail) {
  .validation-header {
    @include flex-between;
    margin-bottom: map.get($space, md);
    width: 100%;

    .validation-title {
      font-size: map.get($font, xl);
      font-weight: 600;
      margin: 0;
      flex: 1;
      min-width: 0;
    }

    .validation-status {
      padding: map.get($space, sm) map.get($space, md);
      border-radius: map.get($radius, xl);
      font-size: map.get($font, sm);
      font-weight: 500;
      flex-shrink: 0;

      &.success {
        background: rgba(24, 160, 88, 0.1);
        color: $success;
      }

      &.error {
        background: rgba(208, 48, 80, 0.1);
        color: $danger;
      }
    }
  }

  .validation-message {
    font-size: map.get($font, md);
    margin-bottom: map.get($space, lg);
    line-height: 1.5;
    width: 100%;
  }

  .validate-btn {
    padding: map.get($space, md) map.get($space, lg);
    border: none;
    border-radius: map.get($radius, base);
    font-size: map.get($font, md);
    cursor: pointer;
    transition: all $transition;
    background: $primary;
    color: white !important;

    &:hover:not(:disabled) { 
      background: color.scale($primary, $lightness: -10%); 
    }
    
    &:disabled {
      opacity: 0.6;
      cursor: not-allowed;
    }
  }
}

:deep(.quick-stats) {
  .stats-title {
    font-size: map.get($font, xl);
    font-weight: 600;
    margin: 0 0 map.get($space, lg) 0;
    width: 100%;
  }

  .stat-row {
    @include flex-between;
    padding: map.get($space, sm) 0;
    border-color: inherit;
    opacity: 0.8;
    width: 100%;

    &:last-child { 
      border-bottom: none; 
    }

    .stat-label {
      font-size: map.get($font, md);
      font-weight: 500;
      flex: 1;
      text-align: left;
    }

    .stat-value {
      font-size: map.get($font, md);
      font-weight: 600;
      color: $primary;
      flex-shrink: 0;
    }
  }
}

// ========================================
// 模态框 - 数据预览弹窗
// ========================================
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  @include flex-center;
  z-index: 1000;

  :deep(.modal-content) {
    width: 90%;
    max-width: 800px;
    max-height: 90vh;

    .n-card {
      border-radius: map.get($radius, md);
      border: none;
      overflow: hidden;
      width: 100%;
      box-sizing: border-box;
    }

    /* === 模态框头部 === */
    .modal-header {
      @include flex-between;
      padding: map.get($space, lg);
      border-bottom: 1px solid $border;
      width: 100%;

      h3 {
        margin: 0;
        font-size: map.get($font, xl);
        font-weight: 600;
        flex: 1;
        min-width: 0;
      }

      .modal-actions {
        display: flex;
        gap: map.get($space, xs);
        flex-shrink: 0;

        .modal-btn {
          padding: map.get($space, xs) map.get($space, sm);
          border: 1px solid $border;
          border-radius: map.get($radius, base);
          font-size: map.get($font, sm);
          cursor: pointer;
          transition: all $transition;
          background: transparent;
          color: inherit; // 继承主题色

          &:hover {
            border-color: $primary;
            color: $primary;
          }

          &.close { 
            background: #e0e0e0; 
          }
        }
      }
    }

    /* === 模态框内容区 === */
    .modal-tabs {
      padding: map.get($space, lg);
      width: 100%;

      .tab-content {
        margin-bottom: map.get($space, lg);
        width: 100%;

        h4 {
          margin: 0 0 map.get($space, sm) 0;
          font-size: map.get($font, md);
          font-weight: 600;
        }

        /* === JSON 显示区域 === */
        .json-display {
          border: 1px solid $border;
          border-radius: map.get($radius, sm);
          padding: map.get($space, md);
          font-family: 'Courier New', monospace;
          font-size: map.get($font, sm);
          line-height: 1.4;
          overflow: auto;
          max-height: 250px;
          background: transparent;
          opacity: 0.95;
          width: 100%;
          box-sizing: border-box;
        }

        /* === 数据表格 === */
        .data-table {
          width: 100%;
          border-collapse: collapse;
          border: 1px solid $border;
          border-radius: map.get($radius, sm);
          overflow: hidden;

          th, td {
            padding: map.get($space, sm);
            text-align: left;
            border-bottom: 1px solid;
            border-color: inherit;
            opacity: 0.8;
          }

          th {
            font-weight: 600;
            font-size: map.get($font, sm);
          }

          td { 
            font-size: map.get($font, sm); 
          }

          /* === 表格标签样式 === */
          .field-tag, .type-tag {
            padding: 2px map.get($space, xs);
            border-radius: map.get($radius, xl);
            font-size: map.get($font, xs);
            font-weight: 500;
          }

          .field-tag {
            background: rgba(14, 165, 233, 0.1);
            color: $info;
          }

          .type-tag {
            background: rgba(123, 31, 162, 0.1);
            color: #7b1fa2;
          }
        }
      }
    }
  }
}

// ========================================
// 响应式设计 - 移动端适配
// ========================================

/* === 大屏幕（桌面） === */
@media (max-width: 1200px) {
  .control-panel .control-grid {
    grid-template-columns: repeat(3, 1fr);
  }
}

/* === 中等屏幕（平板） === */
@media (max-width: 900px) {
  .control-panel .control-grid {
    grid-template-columns: repeat(2, 1fr);
  }
}

/* === 小屏幕（手机横屏） === */
@media (max-width: 768px) {
  .control-panel .control-grid {
    grid-template-columns: repeat(2, 1fr);
    gap: map.get($space, sm);
  }
  
  .status-section {
    .status-cards { 
      grid-template-columns: repeat(2, 1fr); 
    }
    
    .status-details { 
      grid-template-columns: 1fr; 
    }
  }
}

/* === 超小屏幕（手机竖屏） === */
@media (max-width: 600px) {
  .control-panel .control-grid {
    grid-template-columns: 1fr;
  }
}

/* === 极小屏幕适配 === */
@media (max-width: 480px) {
  .form-demo { 
    padding: map.get($space, md); 
  }

  .status-section .status-cards { 
    grid-template-columns: 1fr; 
  }

  :deep(.form-section) .form-actions {
    flex-direction: column;
    gap: map.get($space, sm);

    .submit-btn, .reset-btn { 
      width: 100%; 
    }
  }

  :deep(.control-card) {
    .action-buttons, .field-actions, .layout-buttons {
      grid-template-columns: 1fr;
    }
    
    .button-group {
      flex-direction: column;
      gap: map.get($space, xs);
      
      button {
        width: 100%;
        min-width: auto;
      }
    }
  }
}